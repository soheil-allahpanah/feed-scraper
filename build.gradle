plugins {
  id 'java'
  id 'java-library'
  id 'maven-publish'
  id 'nu.studer.jooq' version '7.1.1'
  id "io.spring.dependency-management" version "1.0.11.RELEASE"
  id 'org.springframework.boot' version '2.7.4'
  id 'org.unbroken-dome.test-sets' version '4.0.0'
}

group 'ir.sooall'
version '1.0'

repositories {
  mavenCentral()
}
dependencies {

  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-jooq'
  implementation 'org.springframework:spring-tx'

  implementation platform('org.springframework.boot:spring-boot-dependencies:2.6.5')
  implementation 'org.javatuples:javatuples:1.2'
  implementation 'org.slf4j:slf4j-api:1.7.30'
  implementation 'com.rometools:rome:1.18.0'
  implementation 'org.projectlombok:lombok:1.18.20'
  implementation 'org.jetbrains:annotations:20.1.0'
  compileOnly 'org.projectlombok:lombok:1.18.24'
  annotationProcessor 'org.projectlombok:lombok:1.18.24'

  implementation 'org.jooq:jooq:3.16.5'
  implementation 'org.jooq:jooq-meta:3.16.5'
  implementation 'org.jooq:jooq-codegen:3.16.5'

  implementation 'org.postgresql:postgresql:42.3.3'
  jooqGenerator 'org.postgresql:postgresql:42.3.3'
  implementation 'org.testcontainers:postgresql:1.17.3'
  implementation 'com.zaxxer:HikariCP:5.0.1'

  implementation 'io.vavr:vavr:0.10.4'
  implementation "io.github.resilience4j:resilience4j-circuitbreaker:1.7.0"
  implementation "io.github.resilience4j:resilience4j-ratelimiter:1.7.0"
  implementation "io.github.resilience4j:resilience4j-retry:1.7.0"

  implementation 'com.google.code.gson:gson:2.9.1'

  implementation 'org.hamcrest:hamcrest:2.2'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
  testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
  testImplementation "org.testcontainers:junit-jupiter:1.17.3"

}

jooq {
  version = '3.16.5'
  edition = nu.studer.gradle.jooq.JooqEdition.OSS
  configurations {
    main {
      generateSchemaSourceOnCompilation = true

      generationTool {
        jdbc {
          driver = 'org.postgresql.Driver'
          url = 'jdbc:postgresql://192.168.122.242:5432/feed'
          user = 'feed'
          password = 'feed'
        }
        generator {
          name = 'org.jooq.codegen.DefaultGenerator'
          database {
            name = 'org.jooq.meta.postgres.PostgresDatabase'
            inputSchema = 'public'
            forcedTypes {
              forcedType {
                userType = 'com.google.gson.JsonElement'
                binding = 'ir.sooall.feedscraper.common.mapper.PostgresJSONBGsonBinding'
                includeExpression = '.*'

                includeTypes = 'jsonb'
              }
            }
          }
          generate {
            deprecated = false
            records = true
            immutablePojos = true
            fluentSetters = true
          }
          target {
            packageName = 'ir.sooall.feedscraper.adapter.out.db.records'
            directory = 'build/generated-src/jooq/main'
          }
          strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
        }
      }
    }
  }
}

testSets {
  integrationTest
}

tasks.withType(Test) {
  useJUnitPlatform()
  testLogging {
    events "started", "skipped", "passed", "failed"
    showStandardStreams true
  }
}

