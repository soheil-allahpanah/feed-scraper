drop table if exists feeds;
drop table if exists feed_statuses;
drop table if exists feed_items;
drop table if exists bookmarked_feed_items;
drop table if exists feed_subscriptions;
drop type if exists feed_status_type;


 CREATE TABLE IF NOT exists feeds (
    id bigint GENERATED BY DEFAULT AS IDENTITY,
    encoding varchar,
    uri varchar unique NOT null ,
    title varchar,
    description varchar,
    feed_type varchar,
    link varchar,
    web_master varchar,
    managing_editor varchar,
    docs varchar,
    generator varchar,
    style_sheet varchar,
    links jsonb,
    icon jsonb,
    image jsonb,
    authors jsonb,
    contributors jsonb,
    creation_time timestamp NOT NULL,
    last_updated_time timestamp NOT null,
    CONSTRAINT feed_pk PRIMARY KEY (id)
);

CREATE type feed_status_type AS ENUM ('UPDATED', 'UPDATING');

 CREATE TABLE IF NOT exists feed_statuses (
   id bigint GENERATED BY DEFAULT AS IDENTITY,
   feed_id bigint  unique NOT null ,
   status feed_status_type NOT NULL,
   last_feed_item_uri text,
   creation_time timestamp NOT NULL,
   last_updated_time timestamp NOT null,
   CONSTRAINT feed_statuses_pk PRIMARY KEY (id)
 );

CREATE TABLE IF NOT exists feed_items (
   id bigint GENERATED BY DEFAULT AS IDENTITY,
   feed_id bigint NOT null,
   uri varchar  unique NOT null ,
   link varchar,
   comments varchar,
   content_updated_date timestamp,
   title varchar,
   description jsonb,
   links jsonb,
   contents jsonb,
   enclosures jsonb,
   authors jsonb,
   contributors jsonb,
   creation_time timestamp NOT NULL,
   last_updated_time timestamp NOT null,
   CONSTRAINT feed_item_pk PRIMARY KEY (id)
  );

  CREATE TABLE IF NOT exists bookmarked_feed_items (
   id bigint GENERATED BY DEFAULT AS IDENTITY,
   feed_item_id bigint NOT null,
   user_id bigint NOT null ,
   book_marked bool  NOT NULL,
   creation_time timestamp NOT NULL,
   last_updated_time timestamp NOT null,
   CONSTRAINT book_marked_feed_items_pk PRIMARY KEY (id)
  );

  ALTER TABLE bookmarked_feed_items ADD CONSTRAINT book_marked_feed_items_fi_id_uid_unique unique (feed_item_id, user_id);

CREATE TABLE IF NOT exists feed_subscriptions (
   id bigint GENERATED BY DEFAULT AS IDENTITY,
   feed_id bigint NOT null,
   user_id bigint  NOT null ,
   subscribed bool  NOT NULL,
   creation_time timestamp NOT NULL,
   last_updated_time timestamp NOT null,
   CONSTRAINT feed_subscription_pk PRIMARY KEY (id)
  );
  ALTER TABLE feed_subscriptions ADD CONSTRAINT feed_subscriptions_fid_uid_unique unique (feed_id, user_id);